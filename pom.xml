<?xml version="1.0" encoding="UTF-8"?>
<!--~
  ~ Copyright 2025 Confluent Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  ~-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.confluent</groupId>
        <artifactId>common</artifactId>
        <version>[8.2.0-0, 8.2.1-0)</version>
    </parent>

    <groupId>io.confluent.gateway-images</groupId>
    <artifactId>cpc-gateway-images-parent</artifactId>
    <packaging>pom</packaging>
    <name>Gateway Docker Images</name>
    <description>Build files for Confluent's Gateway Docker Images</description>
    <version>1.1.0-0</version>

    <modules>
        <module>gateway</module>
        <module>confluent-gateway-for-cloud</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>utility-belt</artifactId>
                <version>8.1.0</version>
            </dependency>

            <dependency>
                <groupId>org.jolokia</groupId>
                <artifactId>jolokia-jvm</artifactId>
                <version>${jolokia-jvm.version}</version>
            </dependency>
            
            <dependency>
                <groupId>io.prometheus.jmx</groupId>
                <artifactId>jmx_prometheus_javaagent</artifactId>
                <version>${jmx_prometheus_javaagent.version}</version>
            </dependency>
            
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>disk-usage-agent</artifactId>
                <version>${io.confluent.common.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <configuration>
                    <buildArgs>
                        <UBI_MINIMAL_VERSION>${ubi9-minimal.image.version}</UBI_MINIMAL_VERSION>
                        <ARCH>${docker.build.arch}</ARCH>
                        <GATEWAY_VERSION>${docker.build.gateway.version}</GATEWAY_VERSION>
                        <GOLANG_VERSION>${golang.image.version}</GOLANG_VERSION>
                        <TEMURIN_JDK_VERSION>-${ubi9-minimal.temurin-21-jdk.version}</TEMURIN_JDK_VERSION>
                    </buildArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <images>
                        <image>
                            <build>
                                <args>
                                    <UBI_MINIMAL_VERSION>${ubi9-minimal.image.version}</UBI_MINIMAL_VERSION>
                                    <ARCH>${docker.build.arch}</ARCH>
                                    <GATEWAY_VERSION>${docker.build.gateway.version}</GATEWAY_VERSION>
                                    <GOLANG_VERSION>${golang.image.version}</GOLANG_VERSION>
                                    <TEMURIN_JDK_VERSION>-${ubi9-minimal.temurin-21-jdk.version}</TEMURIN_JDK_VERSION>
                                </args>
                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <properties>
        <component.name>gateway</component.name>
        <io.confluent.gateway-images.version>1.1.0-0</io.confluent.gateway-images.version>
        <arch.type>.arm64</arch.type>
        <!--  This is a placeholder for the architecture of the image that we will need from input
         and the input will come in mvn command from semaphore.yml file -->
        <docker.file>Dockerfile.ubi9</docker.file>
        
        <!-- New properties for our custom Dockerfile -->
        <ubi9-minimal.image.version>9.4-1194</ubi9-minimal.image.version>
        <ubi9-minimal.temurin-21-jdk.version>21.0.8.0.0.9-1</ubi9-minimal.temurin-21-jdk.version>
        <golang.image.version>1.24</golang.image.version>
        
        <!-- Shared Docker build arguments -->
        <docker.build.arch>${arch.type}</docker.build.arch>
        <docker.build.gateway.version>${GATEWAY_VERSION}</docker.build.gateway.version>
    </properties>
</project>
