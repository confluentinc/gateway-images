services:
  # start-zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:${KAFKA_SERVER_VERSION}
    volumes:
      - ./configs:/etc/kafka/configs
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      
      # SASL configuration for ZooKeeper
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/configs/zookeeper_jaas.conf -Dzookeeper.requireClientAuthScheme=sasl"
      ZOOKEEPER_AUTH_PROVIDER_SASL: org.apache.zookeeper.server.auth.SASLAuthenticationProvider
      ZOOKEEPER_REQUIRE_CLIENT_AUTH_SCHEME: sasl
    healthcheck:
      test: ["CMD-SHELL", "timeout 5 bash -c '</dev/tcp/localhost/2181' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
  # end-zookeeper

  kafka-server:
    image: confluentinc/cp-kafka:${KAFKA_SERVER_VERSION}
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
      - "9093:9093"
      - "9094:9094"
    volumes:
      - ./ssl:/etc/kafka/secrets
      - ./configs:/etc/kafka/configs
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      
      # Listener configuration - PLAINTEXT, SASL_PLAINTEXT, and SSL
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,SASL_PLAINTEXT://0.0.0.0:9093,SSL://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-server:9092,SASL_PLAINTEXT://kafka-server:9093,SSL://kafka-server:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SASL_PLAINTEXT:SASL_PLAINTEXT,SSL:SSL
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      
      # SSL Configuration
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: truststore_creds
      KAFKA_SSL_KEY_CREDENTIALS: key_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: truststore_creds
      KAFKA_SSL_CLIENT_AUTH: none

      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_SASL_PLAINTEXT_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_SASL_PLAINTEXT_PLAIN_SASL_JAAS_CONFIG: 'org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret" user_admin="admin-secret" user_alice="alice-secret";'
      
      # JAAS file and ZooKeeper SASL mechanism configuration
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/configs/kafka_server_jaas.conf -Dzookeeper.sasl.client=true -Dzookeeper.sasl.clientconfig=Client"
      
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      
      # Replication factor for single broker setup
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_MIN_INSYNC_REPLICAS: 1
      
      KAFKA_SUPER_USERS: User:ANONYMOUS
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  gateway:
    image: ${DOCKER_REGISTRY:-}confluentinc/cpc-gateway:latest
    depends_on:
      kafka-server:
        condition: service_healthy
    ports:
      - "19092:19092"
      - "19093:19093"
      - "19094:19094"
      - "9190:9190"
    volumes:
      - ./ssl:/etc/gateway/secrets
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka-server:9092
      GATEWAY_CONFIG: |
        gateway:
          name: "vct-gateway"
          streamingDomains:
            - name: "vct-domain"
              kafkaCluster:
                name: "vct-cluster"
                bootstrapServers:
                  - endpoint: "kafka-server:9092"
                    id: plaintext
                nodeIdRanges:
                  - name: "default"
                    start: 0
                    end: 1
        
            - name: "vct-domain-sasl"
              kafkaCluster:
                name: "vct-cluster"
                bootstrapServers:
                  - endpoint: "kafka-server:9093"
                    id: sasl
                nodeIdRanges:
                  - name: "default"
                    start: 0
                    end: 1
        
            - name: "vct-domain-ssl"
              kafkaCluster:
                name: "vct-cluster"
                bootstrapServers:
                  - endpoint: "kafka-server:9094"
                    id: ssl
                    ssl:
                      truststore:
                        location: /etc/gateway/secrets/kafka.truststore.jks
                        password:
                          file: /etc/gateway/secrets/truststore_creds
                nodeIdRanges:
                  - name: "default"
                    start: 0
                    end: 1
          routes:
            - name: "vct-route"
              endpoint: "gateway:19092"
              brokerIdentificationStrategy:
                type: port
              streamingDomain:
                name: "vct-domain"
                bootstrapServerId: "plaintext"
              security:
                auth: "passthrough"
        
            - name: "vct-route-sasl"
              endpoint: "gateway:19095"
              brokerIdentificationStrategy:
                type: port
              streamingDomain:
                name: "vct-domain-sasl"
                bootstrapServerId: "sasl"
              security:
                auth: "passthrough"
        
            - name: "vct-route-ssl"
              endpoint: "gateway:19098"
              brokerIdentificationStrategy:
                type: port
              streamingDomain:
                name: "vct-domain-ssl"
                bootstrapServerId: "ssl"
              security:
                auth: "passthrough"
                ssl:
                  truststore:
                    location: /etc/gateway/secrets/kafka.truststore.jks
                    password:
                      file: /etc/gateway/secrets/truststore_creds
                  keystore:
                    location: /etc/gateway/secrets/kafka.keystore.jks
                    password:
                      file: /etc/gateway/secrets/truststore_creds
                  clientAuth: none
          admin:
            endpoints:
              metrics: true
          advanced:
            useIoUring: false
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9190/metrics || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
  kafka-client-test:
    build:
      context: .
      dockerfile: Dockerfile.kafka-maven
      args:
        KAFKA_VERSION: ${KAFKA_CLIENT_VERSION}
    depends_on:
      gateway:
        condition: service_healthy
    container_name: kafka-client-test
    volumes:
      - ./ssl:/etc/kafka/secrets
    command: sleep infinity